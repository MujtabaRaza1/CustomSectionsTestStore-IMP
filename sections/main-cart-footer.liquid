{{ 'component-cart.css' | asset_url | stylesheet_tag }}
{{ 'component-totals.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-discounts.css' | asset_url | stylesheet_tag }}

<div class="page-width{% if cart == empty %} is-empty{% endif %}" id="main-cart-footer" data-id="{{ section.id }}">
  <div class="drawer__discount-code section">
      <label for="CartDrawer-DiscountCode" class="label1">Discount Code</label>
      <div class="input-group">
        {% assign discountCode = settings.discount_code %}
            <input
              type="text"
              id="CartDrawer-DiscountCode"
              name="discount_code"
              class="input-group__field"
              placeholder="Enter discount code"
              value="{{ discountCode }}"
            >              
            <button type="submit" class="button input-group__btn" id="apply-discount-button">Apply</button>
            
            
            <script>
              const addToCart = async (variantId) => {
                const formData = new FormData();
                formData.append('id', variantId);
                formData.append('quantity', '1');
              
                
                 await fetch('/cart/add.js', {
                  method: 'POST',
                  body: formData
                })
                  .then(response => response.json())
                  .then(data => {
                    // Handle the response data as needed
                    console.log('Product added to cart:', data);
                    window.location.reload();
                  })
                  .catch(error => {
                    // Handle any errors that occurred during the request
                    console.error('Error adding product to cart:', error);
                  });
            
                }
              let promos = [];
              {% assign skipObject = false %}

                    {% for i in (0..20) %}
                      {% assign code1 = 'promoCode_' | append: i %}
                      {% assign product1 = 'product_' | append: i %}
                      {% assign threshold1 = 'promoThresholdAmount_' | append: i %}

                      {% assign promoCodeValue = settings[code1] %}
                      {% assign productValue = settings[product1].selected_or_first_available_variant.id %}
                      {% assign thresholdValue = settings[threshold1] %}
                     
                      {% if promoCodeValue != blank and productValue != blank and thresholdValue != blank %}
                        let obj_{{ i }} = {
                            promo: '{{ settings[code1] }}',
                            product: '{{ settings[product1].selected_or_first_available_variant.id }}',
                            thresholdAmount: '{{ settings[threshold1] }}'
                        };
                 
                        promos.push(obj_{{ i }});
                      {% else %}
                        {% assign skipObject = true %}
                      {% endif %}
                    
                      {% if skipObject == true %}
                        {% assign skipObject = false %}
                      {% endif %}
                    {% endfor %}

                    console.log(promos);   
                    
                    function checkThreshold() {
                      const inputCode = document.querySelector('#CartDrawer-DiscountCode').value;
                      const matchedPromo = promos.find(obj => obj.promo === inputCode);

                      if(matchedPromo){
                        const { product, thresholdAmount } = matchedPromo;
                        const cartPrice = {{ cart.total_price | money_without_currency }}
                        if(thresholdAmount <= cartPrice){
                          const variantId = product;
                          addToCart(variantId);
                          
                          }
                        }else{
                          console.log('Invalid Promo Code')
                        }
                      } 
                    

                    const applyBtn = document.querySelector('#apply-discount-button');
                    applyBtn.addEventListener('click', checkThreshold);
            </script>
      </div>
    </div>
  <div>
    <div class="cart__footer">
      {%- if settings.show_cart_note -%}
        <cart-note class="cart__note field">
          <label for="Cart-note">{{ 'sections.cart.note' | t }}</label>
          <textarea
            class="text-area field__input"
            name="note"
            form="cart"
            id="Cart-note"
            placeholder="{{ 'sections.cart.note' | t }}"
          >{{ cart.note }}</textarea>
        </cart-note>
      {%- endif -%}
      
      <div class="cart__blocks">
        {% for block in section.blocks %}
          {%- case block.type -%}
            {%- when '@app' -%}
              {% render block %}
            {%- when 'subtotal' -%}
              <div class="js-contents" {{ block.shopify_attributes }}>
                <div class="totals">
                  <h2 class="totals__subtotal">{{ 'sections.cart.subtotal' | t }}</h2>
                  <p class="totals__subtotal-value">{{ cart.total_price | money_with_currency }}</p>
                </div>

                <div>
                  {%- if cart.cart_level_discount_applications.size > 0 -%}
                    <ul class="discounts list-unstyled" role="list" aria-label="{{ 'customer.order.discount' | t }}">
                      {%- for discount in cart.cart_level_discount_applications -%}
                        <li class="discounts__discount discounts__discount--position">
                          {%- render 'icon-discount' -%}
                          {{ discount.title }}
                          (-{{ discount.total_allocated_amount | money }})
                        </li>
                      {%- endfor -%}
                    </ul>
                  {%- endif -%}
                </div>

                <small class="tax-note caption-large rte">
                  {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
                    {{ 'sections.cart.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
                  {%- elsif cart.taxes_included -%}
                    {{ 'sections.cart.taxes_included_but_shipping_at_checkout' | t }}
                  {%- elsif shop.shipping_policy.body != blank -%}
                    {{ 'sections.cart.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}
                  {%- else -%}
                    {{ 'sections.cart.taxes_and_shipping_at_checkout' | t }}
                  {%- endif -%}
                </small>
              </div>
            {%- else -%}
              <div class="cart__ctas" {{ block.shopify_attributes }}>
                <noscript>
                  <button type="submit" class="cart__update-button button button--secondary" form="cart">
                    {{ 'sections.cart.update' | t }}
                  </button>
                </noscript>

                <button
                  type="submit"
                  id="checkout"
                  class="cart__checkout-button button"
                  name="checkout"
                  {% if cart == empty %}
                    disabled
                  {% endif %}
                  form="cart"
                >
                  {{ 'sections.cart.checkout' | t }}
                </button>
              </div>

              {%- if additional_checkout_buttons -%}
                <div class="cart__dynamic-checkout-buttons additional-checkout-buttons">
                  {{ content_for_additional_checkout_buttons }}
                </div>
              {%- endif -%}
          {%- endcase -%}
        {% endfor %}

        <div id="cart-errors"></div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    function isIE() {
      const ua = window.navigator.userAgent;
      const msie = ua.indexOf('MSIE ');
      const trident = ua.indexOf('Trident/');

      return msie > 0 || trident > 0;
    }

    if (!isIE()) return;
    const cartSubmitInput = document.createElement('input');
    cartSubmitInput.setAttribute('name', 'checkout');
    cartSubmitInput.setAttribute('type', 'hidden');
    document.querySelector('#cart').appendChild(cartSubmitInput);
    document.querySelector('#checkout').addEventListener('click', function (event) {
      document.querySelector('#cart').submit();
    });

    
  });
  
</script>

{% schema %}
{
  "name": "t:sections.main-cart-footer.name",
  "class": "cart__footer-wrapper",
  "blocks": [
    {
      "type": "subtotal",
      "name": "t:sections.main-cart-footer.blocks.subtotal.name",
      "limit": 1
    },
    {
      "type": "buttons",
      "name": "t:sections.main-cart-footer.blocks.buttons.name",
      "limit": 1
    },
    {
      "type": "@app"
    }
  ]
  
}
{% endschema %}
